{"version":3,"sources":["webpack:///static/js/vendor.867c68959dc0b858c887.js","webpack:///./~/.3.4.2@zrender/lib/core/util.js","webpack:///./~/.3.5.2@echarts/lib/echarts.js","webpack:///./~/.3.5.2@echarts/lib/util/model.js","webpack:///./~/.3.5.2@echarts/lib/util/number.js","webpack:///./~/.3.4.2@zrender/lib/core/env.js","webpack:///./~/.3.5.2@echarts/lib/util/graphic.js","webpack:///./~/.3.4.2@zrender/lib/core/vector.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Path.js","webpack:///./~/.3.5.2@echarts/lib/util/format.js","webpack:///./~/.3.4.2@zrender/lib/core/BoundingRect.js","webpack:///./~/.3.5.2@echarts/lib/model/Model.js","webpack:///./~/.3.5.2@echarts/lib/util/clazz.js","webpack:///./~/.3.4.2@zrender/lib/contain/text.js","webpack:///./~/.11.3.4@vue-loader/lib/component-normalizer.js","webpack:///./~/.2.4.1@core-js/library/modules/_wks.js","webpack:///./~/.3.4.2@zrender/lib/core/matrix.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/featureManager.js","webpack:///./~/.3.4.2@zrender/lib/core/curve.js","webpack:///./~/.3.4.2@zrender/lib/core/event.js","webpack:///./~/.3.4.2@zrender/lib/mixin/Eventful.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/.2.4.1@core-js/library/modules/_global.js","webpack:///./~/.3.4.2@zrender/lib/tool/color.js","webpack:///./~/.3.5.2@echarts/lib/model/Component.js","webpack:///./~/.2.4.1@core-js/library/modules/_an-object.js","webpack:///./~/.2.4.1@core-js/library/modules/_core.js","webpack:///./~/.2.4.1@core-js/library/modules/_descriptors.js","webpack:///./~/.2.4.1@core-js/library/modules/_has.js","webpack:///./~/.2.4.1@core-js/library/modules/_hide.js","webpack:///./~/.2.4.1@core-js/library/modules/_object-dp.js","webpack:///./~/.3.4.2@zrender/lib/config.js","webpack:///./~/.3.4.2@zrender/lib/container/Group.js","webpack:///./~/.3.4.2@zrender/lib/core/PathProxy.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/.3.5.2@echarts/lib/coord/axisHelper.js","webpack:///./~/.3.5.2@echarts/lib/scale/Scale.js","webpack:///./~/.3.5.2@echarts/lib/util/layout.js","webpack:///./~/.2.4.1@core-js/library/modules/_defined.js","webpack:///./~/.2.4.1@core-js/library/modules/_is-object.js","webpack:///./~/.2.4.1@core-js/library/modules/_iterators.js","webpack:///./~/.2.4.1@core-js/library/modules/_property-desc.js","webpack:///./~/.2.4.1@core-js/library/modules/_shared-key.js","webpack:///./~/.2.4.1@core-js/library/modules/_to-integer.js","webpack:///./~/.3.4.2@zrender/lib/core/timsort.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Displayable.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Gradient.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/helper.js","webpack:///./~/.3.5.2@echarts/lib/data/DataDiffer.js","webpack:///./~/.3.5.2@echarts/lib/data/List.js","webpack:///./~/.3.5.2@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/.3.5.2@echarts/lib/scale/Interval.js","webpack:///./~/.3.5.2@echarts/lib/util/component.js","webpack:///./~/.2.2.6@vue/dist/vue.esm.js","webpack:///./~/.0.11.9@process/browser.js","webpack:///./~/.2.4.1@core-js/library/modules/_cof.js","webpack:///./~/.2.4.1@core-js/library/modules/_ctx.js","webpack:///./~/.2.4.1@core-js/library/modules/_dom-create.js","webpack:///./~/.2.4.1@core-js/library/modules/_enum-bug-keys.js","webpack:///./~/.2.4.1@core-js/library/modules/_export.js","webpack:///./~/.2.4.1@core-js/library/modules/_fails.js","webpack:///./~/.2.4.1@core-js/library/modules/_set-to-string-tag.js","webpack:///./~/.2.4.1@core-js/library/modules/_shared.js","webpack:///./~/.2.4.1@core-js/library/modules/_to-iobject.js","webpack:///./~/.2.4.1@core-js/library/modules/_to-length.js","webpack:///./~/.2.4.1@core-js/library/modules/_to-object.js","webpack:///./~/.2.4.1@core-js/library/modules/_uid.js","webpack:///./~/.3.4.2@zrender/lib/Element.js","webpack:///./~/.3.4.2@zrender/lib/animation/Animator.js","webpack:///./~/.3.4.2@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/.3.4.2@zrender/lib/contain/util.js","webpack:///./~/.3.4.2@zrender/lib/core/LRU.js","webpack:///./~/.3.4.2@zrender/lib/core/guid.js","webpack:///./~/.3.4.2@zrender/lib/core/log.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Image.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Pattern.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Style.js","webpack:///./~/.3.4.2@zrender/lib/graphic/helper/poly.js","webpack:///./~/.3.5.2@echarts/lib/CoordinateSystem.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/history.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/.3.5.2@echarts/lib/scale/helper.js","webpack:///./~/.3.5.2@echarts/lib/util/throttle.js","webpack:///./~/.3.5.2@echarts/lib/view/Chart.js","webpack:///./~/.3.5.2@echarts/lib/view/Component.js","webpack:///./~/.0.10.3@regenerator-runtime/runtime-module.js","webpack:///./~/.0.10.3@regenerator-runtime/runtime.js","webpack:///./~/.2.0.5@vue-style-loader/lib/listToStyles.js","webpack:///./~/.2.3.1@vue-router/dist/vue-router.esm.js","webpack:///./~/.2.4.1@core-js/library/fn/array/from.js","webpack:///./~/.2.4.1@core-js/library/fn/json/stringify.js","webpack:///./~/.2.4.1@core-js/library/modules/_a-function.js","webpack:///./~/.2.4.1@core-js/library/modules/_array-includes.js","webpack:///./~/.2.4.1@core-js/library/modules/_classof.js","webpack:///./~/.2.4.1@core-js/library/modules/_create-property.js","webpack:///./~/.2.4.1@core-js/library/modules/_html.js","webpack:///./~/.2.4.1@core-js/library/modules/_ie8-dom-define.js","webpack:///./~/.2.4.1@core-js/library/modules/_iobject.js","webpack:///./~/.2.4.1@core-js/library/modules/_is-array-iter.js","webpack:///./~/.2.4.1@core-js/library/modules/_iter-call.js","webpack:///./~/.2.4.1@core-js/library/modules/_iter-create.js","webpack:///./~/.2.4.1@core-js/library/modules/_iter-define.js","webpack:///./~/.2.4.1@core-js/library/modules/_iter-detect.js","webpack:///./~/.2.4.1@core-js/library/modules/_library.js","webpack:///./~/.2.4.1@core-js/library/modules/_object-create.js","webpack:///./~/.2.4.1@core-js/library/modules/_object-dps.js","webpack:///./~/.2.4.1@core-js/library/modules/_object-gpo.js","webpack:///./~/.2.4.1@core-js/library/modules/_object-keys-internal.js","webpack:///./~/.2.4.1@core-js/library/modules/_object-keys.js","webpack:///./~/.2.4.1@core-js/library/modules/_redefine.js","webpack:///./~/.2.4.1@core-js/library/modules/_string-at.js","webpack:///./~/.2.4.1@core-js/library/modules/_to-index.js","webpack:///./~/.2.4.1@core-js/library/modules/_to-primitive.js","webpack:///./~/.2.4.1@core-js/library/modules/core.get-iterator-method.js","webpack:///./~/.2.4.1@core-js/library/modules/es6.array.from.js","webpack:///./~/.2.4.1@core-js/library/modules/es6.string.iterator.js","webpack:///./~/.3.4.2@zrender/lib/Handler.js","webpack:///./~/.3.4.2@zrender/lib/Layer.js","webpack:///./~/.3.4.2@zrender/lib/Painter.js","webpack:///./~/.3.4.2@zrender/lib/Storage.js","webpack:///./~/.3.4.2@zrender/lib/animation/Animation.js","webpack:///./~/.3.4.2@zrender/lib/animation/Clip.js","webpack:///./~/.3.4.2@zrender/lib/animation/easing.js","webpack:///./~/.3.4.2@zrender/lib/contain/arc.js","webpack:///./~/.3.4.2@zrender/lib/contain/cubic.js","webpack:///./~/.3.4.2@zrender/lib/contain/line.js","webpack:///./~/.3.4.2@zrender/lib/contain/path.js","webpack:///./~/.3.4.2@zrender/lib/contain/quadratic.js","webpack:///./~/.3.4.2@zrender/lib/contain/windingLine.js","webpack:///./~/.3.4.2@zrender/lib/core/GestureMgr.js","webpack:///./~/.3.4.2@zrender/lib/core/bbox.js","webpack:///./~/.3.4.2@zrender/lib/dom/HandlerProxy.js","webpack:///./~/.3.4.2@zrender/lib/graphic/CompoundPath.js","webpack:///./~/.3.4.2@zrender/lib/graphic/LinearGradient.js","webpack:///./~/.3.4.2@zrender/lib/graphic/RadialGradient.js","webpack:///./~/.3.4.2@zrender/lib/graphic/Text.js","webpack:///./~/.3.4.2@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/.3.4.2@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/.3.4.2@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/.3.4.2@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Arc.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Circle.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Line.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Rect.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Ring.js","webpack:///./~/.3.4.2@zrender/lib/graphic/shape/Sector.js","webpack:///./~/.3.4.2@zrender/lib/mixin/Animatable.js","webpack:///./~/.3.4.2@zrender/lib/mixin/Draggable.js","webpack:///./~/.3.4.2@zrender/lib/mixin/Transformable.js","webpack:///./~/.3.4.2@zrender/lib/tool/path.js","webpack:///./~/.3.4.2@zrender/lib/tool/transformPath.js","webpack:///./~/.3.4.2@zrender/lib/zrender.js","webpack:///./~/.3.5.2@echarts/lib/ExtensionAPI.js","webpack:///./~/.3.5.2@echarts/lib/action/createDataSelectAction.js","webpack:///./~/.3.5.2@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/.3.5.2@echarts/lib/chart/pie.js","webpack:///./~/.3.5.2@echarts/lib/chart/pie/PieSeries.js","webpack:///./~/.3.5.2@echarts/lib/chart/pie/PieView.js","webpack:///./~/.3.5.2@echarts/lib/chart/pie/labelLayout.js","webpack:///./~/.3.5.2@echarts/lib/chart/pie/pieLayout.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/.3.5.2@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/.3.5.2@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/.3.5.2@echarts/lib/component/axis/AxisView.js","webpack:///./~/.3.5.2@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoomSelect.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./~/.3.5.2@echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./~/.3.5.2@echarts/lib/component/helper/BrushController.js","webpack:///./~/.3.5.2@echarts/lib/component/helper/BrushTargetManager.js","webpack:///./~/.3.5.2@echarts/lib/component/helper/interactionMutex.js","webpack:///./~/.3.5.2@echarts/lib/component/helper/listComponent.js","webpack:///./~/.3.5.2@echarts/lib/component/helper/selectableMixin.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/ToolboxView.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/feature/DataView.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/feature/Restore.js","webpack:///./~/.3.5.2@echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./~/.3.5.2@echarts/lib/component/tooltip.js","webpack:///./~/.3.5.2@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/.3.5.2@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/.3.5.2@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/.3.5.2@echarts/lib/coord/Axis.js","webpack:///./~/.3.5.2@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/.3.5.2@echarts/lib/helper.js","webpack:///./~/.3.5.2@echarts/lib/loading/default.js","webpack:///./~/.3.5.2@echarts/lib/model/Global.js","webpack:///./~/.3.5.2@echarts/lib/model/OptionManager.js","webpack:///./~/.3.5.2@echarts/lib/model/Series.js","webpack:///./~/.3.5.2@echarts/lib/model/globalDefault.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/.3.5.2@echarts/lib/model/mixin/textStyle.js","webpack:///./~/.3.5.2@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/.3.5.2@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/.3.5.2@echarts/lib/processor/dataFilter.js","webpack:///./~/.3.5.2@echarts/lib/scale/Log.js","webpack:///./~/.3.5.2@echarts/lib/scale/Ordinal.js","webpack:///./~/.3.5.2@echarts/lib/scale/Time.js","webpack:///./~/.3.5.2@echarts/lib/util/symbol.js","webpack:///./~/.3.5.2@echarts/lib/visual/dataColor.js","webpack:///./~/.3.5.2@echarts/lib/visual/seriesColor.js","webpack:///./~/.6.23.0@babel-runtime/core-js/array/from.js","webpack:///./~/.6.23.0@babel-runtime/core-js/json/stringify.js","webpack:///./~/.6.23.0@babel-runtime/helpers/toConsumableArray.js","webpack:///./~/.6.23.0@babel-runtime/regenerator/index.js","webpack:///./~/.0.26.4@css-loader/lib/css-base.js","webpack:///./~/.2.0.5@vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","noop","__webpack_require__","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","ExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","get","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","left","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","val","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","round","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","abs","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","ArrayCtor","Float32Array","out","copy","set","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","containerWidth","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","default","staticRenderFns","_scopeId","computed","keys","store","uid","Symbol","USE_SYMBOL","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","features","ctor","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","box","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","eval","__g","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","it","TypeError","core","__e","defineProperty","dP","createDesc","object","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","config","debugMode","Element","_children","__storage","children","childAt","childOfName","childCount","_doAdd","addBefore","nextSibling","addToMap","addChildrenToStorage","delFromMap","delChildrenFromStorage","removeAll","eachChild","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","_len","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","dx","dy","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","collectAxesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","extent","getExtent","reverse","isBlank","getAxisPointerModel","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","setExtent","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","undefined","bitmap","enumerable","configurable","writable","shared","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","callback","nameObj","capital","eachAxisDim","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","defaultKeyGetter","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","completeDimensions","dimCount","value0","retrieveValue","defaultNames","extraPrefix","guessOrdinal","excludes","includes","roundNumber","_intervalPrecision","niceTicks","_niceExtent","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","__webpack_exports__","_toString","JSON","toNumber","expectsLowerCase","fn","cache","boundFn","_length","toArray","to","_from","isPlainObject","OBJECT_STRING","toObject","looseEqual","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","def","bailRE","segments","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","camelize","normalizeDirectives","dirs","directives","mergeOptions","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","Vue$3","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","handleError","err","info","errorHandler","inBrowser","error","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","elm","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","capture","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","nestedIndex","last","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","every","isWhitespace","isComment","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","createEmptyVNode","callHook","updateComponent","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","propKeys","_propKeys","$slots","$forceUpdate","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","waiting","flushing","flushSchedulerQueue","watcher","run","oldQueue","devtools","emit","queueWatcher","nextTick","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","methods","initMethods","_data","initComputed","watch","initWatch","propsOptions","isRoot","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","evaluate","createWatcher","$watch","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","resolveConstructorOptions","transformModel","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","_context","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","factory","requested","cbs","pendingCallbacks","sync","resolve","reject","reason","then","domProps","altKey","checkProp","hash","preserve","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","initProvide","provide","_provided","initInjections","inject","hasSymbol","Reflect","ownKeys","provideKey","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","dedupe","_init","initUse","Vue","use","plugin","installed","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","initProps$1","initComputed$1","_assetTypes","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","RegExp","pruneCache","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","isUndef","isDef","isTrue","sameVnode","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","isStringStart","parseString","parseBracket","substring","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","setTimeout","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","moved","WebkitTransform","transitionDuration","decode","html","decoder","innerHTML","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","stackedTag","reStackedTag","reCache","endTagLength","rest","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","root","currentParent","preserveWhitespace","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","bind$1","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","cloneNode","_isServer","_Set","optionMergeStrategies","productionTip","performance","ignoredElements","_lifecycleHooks","_maxUpdateCount","freeze","hasProto","UA","isEdge","isAndroid","isIOS","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","uid$1","subs","addSub","removeSub","addDep","arrayMethods","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","expOrFn","deep","user","active","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","$mount","keepAlive","mountedNode","prepatch","insert","destroy","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_q","_i","_m","_f","_k","_b","_v","_e","_u","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","defineReactive","delete","testEl","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","cssVarRE","importantRE","setProperty","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","vmodel","model$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","content","encoded","singleAttrValues","ncname","&lt;","&gt;","&quot;","&amp;","&#10;","open","esc","tab","space","up","down","genGuard","prevent","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","baseOptions","ref$1","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","idToTemplate","mount","documentElement","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","title","argv","versions","addListener","removeListener","removeAllListeners","cwd","chdir","umask","aFunction","that","is","hide","$export","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","virtual","U","TAG","stat","IObject","defined","toInteger","px","guid","Transformable","Animatable","clipPath","drift","decomposeTransform","afterUpdate","updateTransform","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","angle","LinkedList","head","tail","linkedListProto","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","idStart","ZImage","globalImageCache","_image","cachedImgObj","onload","sWidth","sHeight","drawImage","repeat","_canvasPattern","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textVerticalAlign","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","point","getTooltipPosition","dataToPoint","coordDimToDataDim","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","AxisProxy","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","save","coordModel","coordIndex","coordSysLists","getCoordSysModel","giveStore","ATTR","history","newSnapshot","dataZoomId","percentRange","snapshot","classUtil","getColorFromPalette","colorIdx","colorNameMap","colorPalette","fixExtent","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","lastCall","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","Component","componentProto","hadRuntime","regeneratorRuntime","oldRuntime","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","iterator","return","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","iteratorSymbol","Op","$Symbol","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","displayName","isGeneratorFunction","genFun","mark","setPrototypeOf","awrap","async","iter","skipTempReset","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","parentId","newStyles","media","sourceMap","part","parts","resolveProps","route","resolveQuery","extraQuery","parsedQuery","parseQuery","stringifyQuery","val2","createRoute","location","redirectedFrom","fullPath","getFullPath","matched","formatMatch","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","isIncludedRoute","current","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","findAnchor","_Vue","_router","_route","beforeCreate","router","View","Link","beforeRouteEnter","beforeRouteLeave","resolvePath","relative","append","segment","hashIndex","queryIndex","cleanPath","createRouteMap","routes","oldPathMap","oldNameMap","pathMap","nameMap","addRouteRecord","matchAs","normalizePath","redirect","childMatchAs","aliasRoute","defaultDelimiter","delimiter","PATH_REGEXP","escaped","prefix","modifier","asterisk","partial","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","token","isarray","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","getRouteRegex","regexp","hit","regexpCache","fillParams","routeMsg","regexpCompileCache","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","paramNames","_createRoute","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","pathname","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","_key","pushState","replaceState","runQueue","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","guards","flatMapComponents","instance","guard","extractGuard","flatten","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","resolveAsyncComponents","resolvedDef","getLocation","search","checkFallback","ensureSlash","getHash","replaceHash","href","pushHash","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","encodeReserveReplacer","toTypes","eventTypes","required","exact","$router","classes","linkActiveClass","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","History","ready","readyCbs","listen","onReady","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","afterEach","back","forward","getMatchedComponents","normalizedTo","$JSON","toIObject","toLength","toIndex","IS_INCLUDES","$this","fromIndex","cof","ARG","tryGet","callee","$defineProperty","propertyIsEnumerable","Iterators","ITERATOR","ArrayProto","entries","descriptor","setToStringTag","Constructor","NAME","LIBRARY","redefine","$iterCreate","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","SAFE_CLOSING","riter","skipClosing","safe","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","contentWindow","write","Properties","getKeys","ObjectProto","arrayIndexOf","$keys","TO_STRING","valueOf","classof","getIteratorMethod","isArrayIter","createProperty","getIterFn","arrayLike","aLen","mapfn","mapping","iterFn","$at","iterated","makeEventPacket","eveType","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","Draggable","handlerNames","Handler","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","mousemove","hovered","findHover","lastHovered","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","dispatch","eventArgs","setCursorStyle","cursorStyle","targetEl","eventHandler","eventPacket","eachOtherLayer","layer","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","imageLayer","displayList","whIdx","cwh","plt","prb","stl","defaultView","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_elements","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","elId","elements","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","atan2","_a","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","_x","line","pointPair","center","eventUtil","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","eventTool","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","cp0","interpolate","segs","w2","w3","maxValue","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","polyHelper","roundRectHelper","shadowTemp","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_y","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromMap","oldAddToMap","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","chartInstance","echartsAPIList","actionInfos","isSelected","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","getDimensionsInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","dataSelectableMixin","PieSeries","legendDataProvider","getRawData","updateSelectedMap","_defaultLabelLine","getInitialData","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","avoidLabelOverlap","stillShowZeroSum","itemStyle","borderWidth","animationType","updateDataSelected","hasAnimation","toggleItemSelected","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","updateData","getLabelStyle","isLabelInside","piePieceProto","firstCreate","sectorShape","itemStyleModel","visualColor","lineJoin","getItemStyle","_updateLabel","labelText","labelLayout","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","newIdx","oldIdx","_createClipPath","itemLayout","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textX","textY","labelLineLen","labelLineLen2","labelRotate","RADIAN","eachSeriesByType","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","axisPointerModelHelper","axisTrigger","axisPointer","link","tooltipOption","highDownKey","AxisPointerModel","triggerOn","shadowStyle","padding","borderColor","icon","AxisPonterView","disopse","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","iconStr","updateMandatoryProps","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","forceRender","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","getBandWidth","axisExtent","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","doClear","buildLabel","getCartesian","grid","getAxisDimIndex","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerShapeBuilder","labelInside","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","registerAxisPointerClass","findPointFromSeries","shouldHide","illegalPoint","outputFinder","showValueMap","dataByCoordSys","highlightBatch","updaters","showPointer","showTooltip","coordSysContainsPoint","notTargetAxis","processOnAxis","pointToData","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","containData","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","dataDim","getAxisTooltipData","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisDim","valueLabelOpt","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","isTarget","vals","axisName","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","labelStr","textEl","targetType","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","axisRotation","rawTick","updateAxisPointer","axisView","getAxisPointerClass","axisPointerClass","_axisPointer","disposeAxisPointer","axisPointerClazz","gridModel","getZero","theAxis","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posMap","dirMap","getLabelInterval","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setRange","_dimName","_axisIndex","_dataExtent","_dataZoomModel","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","filterData","isInWindow","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","valueRange","BrushController","_brushType","_brushOption","_panels","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_mounted","baseUID","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","panels","panel","pn","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","panelRect","xmin","ymin","resetCursor","inCover","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","__brushPanelId","getCreatingRange","__defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","brushWidth","ne","sw","nw","se","enableBrush","setPanels","panelOpts","oldPanels","newPanels","panelOpt","defaultBrushType","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","lineX","lineY","polygon","BrushTargetManager","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","minMax","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","rangeOrCoordRange","coordToData","toLocalCoord","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","COORD_CONVERTS","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","getStore","resourceKey","userKey","isTaken","positionGroup","getBoxLayoutParams","addBackground","targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","itemSize","itemGap","showTitle","iconStyle","isUserFeatureName","listComponentHelper","toolboxModel","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","groupSeries","seriesGroupByCategoryAxis","otherSeries","eachRawSeries","baseAxis","getBaseAxis","categoryAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","lines","ITEM_SPLITER","BLOCK_SPLITER","assembleOtherSeries","getContentFromModel","isTSVFormat","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","originalData","readOnly","optionToContent","contentToOption","lang","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","which","selectionStart","selectionEnd","newSeriesOptList","seriesOpt","getSeriesByName","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","DATA_ZOOM_ID_BASE","zoom","nextActive","_dispatchZoomAction","setBatch","findDataZoom","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","dataZoomOpts","dataZoom","toolboxOpt","toolbox","MagicType","bar","tiled","availableIcons","seriesOptGenreator","markPoint","markLine","radioTypes","generateNewSeriesTypes","newSeriesOpt","getAxesByScale","radio","currentType","Restore","SaveAsImage","$a","download","MouseEvent","evt","bubbles","cancelable","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","fontSize","assembleCssText","tooltipModel","zrColor","borderName","camelCase","TooltipContent","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","hideLater","_hideDelay","currentStyle","setContent","setEnterable","enterable","viewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","fixExtentWithBands","nTick","normalizedExtent","onBand","alignWithLabel","bands","getBands","coords","getLabelsCoords","rangeStart","rangeEnd","resetRange","symbolUtil","axisModelCommonMixin","createList","createSymbol","createScale","mixinAxisModelCommonMethods","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","onlyGraphic","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","colorPaletteMixin","visualColorAccessPath","fillDataTextStyle","newSeriesOption","getLinkedData","coordDim","dataDimToCoordDim","multipleSeries","formattedValue","valStr","colorEl","animationEnabled","platform","fontFamily","fontStyle","fontWeight","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","clockWise","pointerColor","dataRange","visualMap","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","mpData","mlData","legendModels","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","symbolType","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolPath","setColor","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","encodeColor","colorAccessPath","__esModule","_from2","arr2","mediaQuery","alreadyImportedModules","addStylesToDom","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","sources","btoa","unescape","hasDocument","DEBUG","listToStyles","getElementsByTagName","_isProduction","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.867c68959dc0b858c887.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(4);\n\n    var GlobalModel = __webpack_require__(228);\n    var ExtensionAPI = __webpack_require__(183);\n    var CoordinateSystemManager = __webpack_require__(79);\n    var OptionManager = __webpack_require__(229);\n\n    var ComponentModel = __webpack_require__(23);\n    var SeriesModel = __webpack_require__(230);\n\n    var ComponentView = __webpack_require__(90);\n    var ChartView = __webpack_require__(89);\n    var graphic = __webpack_require__(5);\n    var modelUtil = __webpack_require__(2);\n    var throttle = __webpack_require__(88);\n\n    var zrender = __webpack_require__(182);\n    var zrUtil = __webpack_require__(0);\n    var colorTool = __webpack_require__(22);\n    var Eventful = __webpack_require__(19);\n    var timsort = __webpack_require__(44);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this, this._coordSysMgr);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.2',\n        dependencies: {\n            zrender: '3.4.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(245));\n    echarts.registerPreprocessor(__webpack_require__(237));\n    echarts.registerLoading('default', __webpack_require__(227));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(49);\n    echarts.Model = __webpack_require__(10);\n\n    echarts.Axis = __webpack_require__(224);\n\n    echarts.graphic = __webpack_require__(5);\n    echarts.number = __webpack_require__(3);\n    echarts.format = __webpack_require__(8);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(15);\n    echarts.vector = __webpack_require__(6);\n    echarts.color = __webpack_require__(22);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(226);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(8);\n    var nubmerUtil = __webpack_require__(3);\n    var Model = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var pathTool = __webpack_require__(180);\n    var round = Math.round;\n    var Path = __webpack_require__(7);\n    var colorTool = __webpack_require__(22);\n    var matrix = __webpack_require__(15);\n    var vector = __webpack_require__(6);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(31);\n\n    graphic.Image = __webpack_require__(75);\n\n    graphic.Text = __webpack_require__(163);\n\n    graphic.Circle = __webpack_require__(170);\n\n    graphic.Sector = __webpack_require__(176);\n\n    graphic.Ring = __webpack_require__(175);\n\n    graphic.Polygon = __webpack_require__(172);\n\n    graphic.Polyline = __webpack_require__(173);\n\n    graphic.Rect = __webpack_require__(174);\n\n    graphic.Line = __webpack_require__(171);\n\n    graphic.BezierCurve = __webpack_require__(169);\n\n    graphic.Arc = __webpack_require__(168);\n\n    graphic.CompoundPath = __webpack_require__(160);\n\n    graphic.LinearGradient = __webpack_require__(161);\n\n    graphic.RadialGradient = __webpack_require__(162);\n\n    graphic.BoundingRect = __webpack_require__(9);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(45);\n    var zrUtil = __webpack_require__(0);\n    var PathProxy = __webpack_require__(32);\n    var pathContain = __webpack_require__(154);\n\n    var Pattern = __webpack_require__(76);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(3);\n    var textContain = __webpack_require__(12);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var matrix = __webpack_require__(15);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(11);\n    var env = __webpack_require__(4);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(235));\n    mixin(Model, __webpack_require__(232));\n    mixin(Model, __webpack_require__(236));\n    mixin(Model, __webpack_require__(234));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(9);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store      = __webpack_require__(63)('wks')\n  , uid        = __webpack_require__(67)\n  , Symbol     = __webpack_require__(21).Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(19);\n    var env = __webpack_require__(4);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(72);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(53);\n    var clazzUtil = __webpack_require__(11);\n    var layout = __webpack_require__(36);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(233));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(39);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(61)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(29)\n  , createDesc = __webpack_require__(41);\nmodule.exports = __webpack_require__(26) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(24)\n  , IE8_DOM_DEFINE = __webpack_require__(124)\n  , toPrimitive    = __webpack_require__(140)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(26) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Element = __webpack_require__(68);\n    var BoundingRect = __webpack_require__(9);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(17);\n    var vec2 = __webpack_require__(6);\n    var bbox = __webpack_require__(158);\n    var BoundingRect = __webpack_require__(9);\n    var dpr = __webpack_require__(30).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Model = __webpack_require__(10);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(241);\n    var IntervalScale = __webpack_require__(52);\n    __webpack_require__(242);\n    __webpack_require__(240);\n    var Scale = __webpack_require__(35);\n\n    var numberUtil = __webpack_require__(3);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(12);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(11);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(9);\n    var numberUtil = __webpack_require__(3);\n    var formatUtil = __webpack_require__(8);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/height is premitted to exist.\n                hasValue(newOption, names[2]) && (merged[names[1]] = null);\n                hasValue(newOption, names[1]) && (merged[names[2]] = null);\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 37 */,\n/* 38 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(63)('keys')\n  , uid    = __webpack_require__(67);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Style = __webpack_require__(77);\n\n    var Element = __webpack_require__(68);\n    var RectText = __webpack_require__(167);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(8);\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(10);\n    var DataDiffer = __webpack_require__(48);\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(3);\n    var formatUtil = __webpack_require__(8);\n    var Scale = __webpack_require__(35);\n    var helper = __webpack_require__(87);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazz = __webpack_require__(11);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.2.6\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // reset scheduler before updated hook called\n  var oldQueue = queue.slice();\n  resetSchedulerState();\n\n  // call updated hooks\n  index = oldQueue.length;\n  while (index--) {\n    watcher = oldQueue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor, tag);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor, tag) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    var loop = function ( i ) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          /* istanbul ignore else */\n          if (false) {\n            defineReactive$$1(vm, key, source._provided[provideKey], function () {\n              warn(\n                \"Avoid mutating an injected value directly since the changes will be \" +\n                \"overwritten whenever the provided component re-renders. \" +\n                \"injection being mutated: \\\"\" + key + \"\\\"\",\n                vm\n              );\n            });\n          } else {\n            defineReactive$$1(vm, key, source._provided[provideKey]);\n          }\n          break\n        }\n        source = source.$parent;\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) loop( i );\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.6';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n        isTrue(oldVnode.isStatic) &&\n        vnode.key === oldVnode.key &&\n        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (false) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(20)))\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(119);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(39)\n  , document = __webpack_require__(21).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(21)\n  , core      = __webpack_require__(25)\n  , ctx       = __webpack_require__(57)\n  , hide      = __webpack_require__(28)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(29).f\n  , has = __webpack_require__(27)\n  , TAG = __webpack_require__(14)('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(21)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(125)\n  , defined = __webpack_require__(38);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(43)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(38);\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(73);\n    var Eventful = __webpack_require__(19);\n    var Transformable = __webpack_require__(179);\n    var Animatable = __webpack_require__(177);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(149);\n    var color = __webpack_require__(22);\n    var util = __webpack_require__(0);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(30);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(45);\n    var BoundingRect = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n\n    var LRU = __webpack_require__(72);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(166);\n    var smoothBezier = __webpack_require__(165);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(4);\n    var zrUtil = __webpack_require__(0);\n    var get = __webpack_require__(2).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var textContain = __webpack_require__(12);\n    var formatUtil = __webpack_require__(8);\n    var matrix = __webpack_require__(15);\n    var axisHelper = __webpack_require__(34);\n    var AxisBuilder = __webpack_require__(197);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var env = __webpack_require__(4);\n    var echarts = __webpack_require__(1);\n    var modelUtil = __webpack_require__(2);\n    var helper = __webpack_require__(47);\n    var AxisProxy = __webpack_require__(201);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(90);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file History manager.\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(11);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(3);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(31);\n    var componentUtil = __webpack_require__(53);\n    var clazzUtil = __webpack_require__(11);\n    var modelUtil = __webpack_require__(2);\n    var zrUtil = __webpack_require__(0);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(31);\n    var componentUtil = __webpack_require__(53);\n    var clazzUtil = __webpack_require__(11);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 91 */,\n/* 92 */,\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(94);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)))\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20), __webpack_require__(55)))\n\n/***/ }),\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.3.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (!condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (h, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // inject instance registration hooks\n    var hooks = data.hook || (data.hook = {});\n    hooks.init = function (vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.prepatch = function (oldVnode, vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.destroy = function (vnode) {\n      if (matched.instances[name] === vnode.child) {\n        matched.instances[name] = undefined;\n      }\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      warn(false, (\"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", expecting an object, function or boolean.\"));\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more comformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  if (query) {\n    var parsedQuery;\n    try {\n      parsedQuery = parseQuery(query);\n    } catch (e) {\n      \"production\" !== 'production' && warn(false, e.message);\n      parsedQuery = {};\n    }\n    for (var key in extraQuery) {\n      parsedQuery[key] = extraQuery[key];\n    }\n    return parsedQuery\n  } else {\n    return extraQuery\n  }\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom\n) {\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (ref) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  return (path || '/') + stringifyQuery(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n    var classes = {};\n    var activeClass = this.activeClass || router.options.linkActiveClass || 'router-link-active';\n    var compareTarget = location.path ? createRoute(null, location) : route;\n    classes[activeClass] = this.exact\n      ? isSameRoute(current, compareTarget)\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.target && e.target.getAttribute) {\n    var target = e.target.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (this.$options.router) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  if (relative.charAt(0) === '/') {\n    return relative\n  }\n\n  if (relative.charAt(0) === '?' || relative.charAt(0) === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '.') {\n      continue\n    } else if (segment === '..') {\n      stack.pop();\n    } else {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathMap,\n  oldNameMap\n) {\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathMap, nameMap, route);\n  });\n\n  return {\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var record = {\n    path: normalizePath(path, parent),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nvar isarray = index$1;\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCache = Object.create(null);\n\nfunction getRouteRegex (path) {\n  var hit = regexpCache[path];\n  var keys, regexp;\n\n  if (hit) {\n    keys = hit.keys;\n    regexp = hit.regexp;\n  } else {\n    keys = [];\n    regexp = index(path, keys);\n    regexpCache[path] = { keys: keys, regexp: regexp };\n  }\n\n  return { keys: keys, regexp: regexp }\n}\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : (current && current.path) || '/';\n  var query = resolveQuery(parsedPath.query, next.query);\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\nfunction createMatcher (routes) {\n  var ref = createRouteMap(routes);\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = getRouteRegex(record.path).keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var path in pathMap) {\n        if (matchRoute(path, location.params, location.path)) {\n          return _createRoute(pathMap[path], location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      \"production\" !== 'production' && warn(\n        false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n      );\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  path,\n  params,\n  pathname\n) {\n  var ref = getRouteRegex(path);\n  var regexp = ref.regexp;\n  var keys = ref.keys;\n  var m = pathname.match(regexp);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) { params[key.name] = val; }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n  }\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) {\n        cb(route);\n      });\n    }\n  }, onAbort);\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function () { onAbort && onAbort(); };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    hook(route, current, function (to) {\n      if (to === false) {\n        // next(false) -> abort navigation, ensure current URL\n        this$1.ensureURL(true);\n        abort();\n      } else if (typeof to === 'string' || typeof to === 'object') {\n        // next('/') or next({ path: '/' }) -> redirect\n        (typeof to === 'object' && to.replace) ? this$1.replace(to) : this$1.push(to);\n        abort();\n      } else {\n        // confirm transition and pass on the value\n        next(to);\n      }\n    });\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    runQueue(enterGuards, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { return cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  return function boundRouteGuard () {\n    return guard.apply(instance, arguments)\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return flatMapComponents(matched, function (def, _, match, key) {\n    // if it's a function and doesn't have Vue options attached,\n    // assume it's an async component resolve function.\n    // we are not using Vue's default async resolving mechanism because\n    // we want to halt the navigation until the incoming component has been\n    // resolved.\n    if (typeof def === 'function' && !def.options) {\n      return function (to, from, next) {\n        var resolve = once(function (resolvedDef) {\n          match.components[key] = resolvedDef;\n          next();\n        });\n\n        var reject = once(function (reason) {\n          warn(false, (\"Failed to resolve async component \" + key + \": \" + reason));\n          next(false);\n        });\n\n        var res = def(resolve, reject);\n        if (res && typeof res.then === 'function') {\n          res.then(resolve, reject);\n        }\n      }\n    }\n  })\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || []);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  this.beforeHooks.push(fn);\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  this.afterHooks.push(fn);\n};\n\nVueRouter.prototype.onReady = function onReady (cb) {\n  this.history.onReady(cb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(to, current || this.history.current, append);\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.3.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(143);\n__webpack_require__(142);\nmodule.exports = __webpack_require__(25).Array.from;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core  = __webpack_require__(25)\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(64)\n  , toLength  = __webpack_require__(65)\n  , toIndex   = __webpack_require__(139);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(56)\n  , TAG = __webpack_require__(14)('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $defineProperty = __webpack_require__(29)\n  , createDesc      = __webpack_require__(41);\n\nmodule.exports = function(object, index, value){\n  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(21).document && document.documentElement;\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(26) && !__webpack_require__(61)(function(){\n  return Object.defineProperty(__webpack_require__(58)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(56);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// check on default Array iterator\nvar Iterators  = __webpack_require__(40)\n  , ITERATOR   = __webpack_require__(14)('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(24);\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create         = __webpack_require__(132)\n  , descriptor     = __webpack_require__(41)\n  , setToStringTag = __webpack_require__(62)\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(28)(IteratorPrototype, __webpack_require__(14)('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY        = __webpack_require__(131)\n  , $export        = __webpack_require__(60)\n  , redefine       = __webpack_require__(137)\n  , hide           = __webpack_require__(28)\n  , has            = __webpack_require__(27)\n  , Iterators      = __webpack_require__(40)\n  , $iterCreate    = __webpack_require__(128)\n  , setToStringTag = __webpack_require__(62)\n  , getPrototypeOf = __webpack_require__(134)\n  , ITERATOR       = __webpack_require__(14)('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ITERATOR     = __webpack_require__(14)('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = __webpack_require__(24)\n  , dPs         = __webpack_require__(133)\n  , enumBugKeys = __webpack_require__(59)\n  , IE_PROTO    = __webpack_require__(42)('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(58)('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(123).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP       = __webpack_require__(29)\n  , anObject = __webpack_require__(24)\n  , getKeys  = __webpack_require__(136);\n\nmodule.exports = __webpack_require__(26) ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = __webpack_require__(27)\n  , toObject    = __webpack_require__(66)\n  , IE_PROTO    = __webpack_require__(42)('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has          = __webpack_require__(27)\n  , toIObject    = __webpack_require__(64)\n  , arrayIndexOf = __webpack_require__(120)(false)\n  , IE_PROTO     = __webpack_require__(42)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(135)\n  , enumBugKeys = __webpack_require__(59);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(28);\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(43)\n  , defined   = __webpack_require__(38);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(43)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(39);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof   = __webpack_require__(121)\n  , ITERATOR  = __webpack_require__(14)('iterator')\n  , Iterators = __webpack_require__(40);\nmodule.exports = __webpack_require__(25).getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ctx            = __webpack_require__(57)\n  , $export        = __webpack_require__(60)\n  , toObject       = __webpack_require__(66)\n  , call           = __webpack_require__(127)\n  , isArrayIter    = __webpack_require__(126)\n  , toLength       = __webpack_require__(65)\n  , createProperty = __webpack_require__(122)\n  , getIterFn      = __webpack_require__(141);\n\n$export($export.S + $export.F * !__webpack_require__(130)(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at  = __webpack_require__(138)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(129)(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(0);\n    var Draggable = __webpack_require__(178);\n\n    var Eventful = __webpack_require__(19);\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(0);\n    var config = __webpack_require__(30);\n    var Style = __webpack_require__(77);\n    var Pattern = __webpack_require__(76);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(30);\n    var util = __webpack_require__(0);\n    var log = __webpack_require__(74);\n    var BoundingRect = __webpack_require__(9);\n    var timsort = __webpack_require__(44);\n\n    var Layer = __webpack_require__(145);\n\n    var requestAnimationFrame = __webpack_require__(70);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(75);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(0);\n    var env = __webpack_require__(4);\n\n    var Group = __webpack_require__(31);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(44);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(0);\n    var Dispatcher = __webpack_require__(18).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(70);\n\n    var Animator = __webpack_require__(69);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(150);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(71).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(17);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(32).CMD;\n    var line = __webpack_require__(153);\n    var cubic = __webpack_require__(152);\n    var quadratic = __webpack_require__(155);\n    var arc = __webpack_require__(151);\n    var normalizeRadian = __webpack_require__(71).normalizeRadian;\n    var curve = __webpack_require__(17);\n\n    var windingLine = __webpack_require__(156);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(17);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(18);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var curve = __webpack_require__(17);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(18);\n    var zrUtil = __webpack_require__(0);\n    var Eventful = __webpack_require__(19);\n    var env = __webpack_require__(4);\n    var GestureMgr = __webpack_require__(157);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(7);\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(46);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(46);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(45);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(12);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(6);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(6);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(12);\n    var BoundingRect = __webpack_require__(9);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(17);\n    var vec2 = __webpack_require__(6);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(78);\n\n    module.exports = __webpack_require__(7).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(78);\n\n    module.exports = __webpack_require__(7).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(164);\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(7).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(4);\n    var Path = __webpack_require__(7);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(69);\n    var util = __webpack_require__(0);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(74);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(15);\n    var vector = __webpack_require__(6);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(7);\n    var PathProxy = __webpack_require__(32);\n    var transformPath = __webpack_require__(181);\n    var matrix = __webpack_require__(15);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(32).CMD;\n    var vec2 = __webpack_require__(6);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(73);\n    var env = __webpack_require__(4);\n    var zrUtil = __webpack_require__(0);\n\n    var Handler = __webpack_require__(144);\n    var Storage = __webpack_require__(147);\n    var Animation = __webpack_require__(148);\n    var HandlerProxy = __webpack_require__(159);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(146)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n\n    function ExtensionAPI(chartInstance, coordSysMgr) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n\n        // Inject getCoordinateSystems to ecModel\n        this.getCoordinateSystems = zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(1);\n    var zrUtil = __webpack_require__(0);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(49);\n    var completeDimensions = __webpack_require__(50);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var CoordinateSystem = __webpack_require__(79);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(1);\n\n    __webpack_require__(187);\n    __webpack_require__(188);\n\n    __webpack_require__(184)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(244), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(190), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(239), 'pie'));\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(49);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var completeDimensions = __webpack_require__(50);\n\n    var dataSelectableMixin = __webpack_require__(211);\n\n    var PieSeries = __webpack_require__(1).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(89).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(12);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO minAngle\n\n\n\n    var numberUtil = __webpack_require__(3);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(189);\n    var zrUtil = __webpack_require__(0);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(1);\n    var axisPointerModelHelper = __webpack_require__(33);\n    var axisTrigger = __webpack_require__(196);\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(192);\n    __webpack_require__(193);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(195);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(1);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(81);\n\n    var AxisPonterView = __webpack_require__(1).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(11);\n    var graphic = __webpack_require__(5);\n    var get = __webpack_require__(2).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(33);\n    var eventTool = __webpack_require__(18);\n    var throttle = __webpack_require__(88);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(5);\n    var BaseAxisPointer = __webpack_require__(194);\n    var viewHelper = __webpack_require__(82);\n    var cartesianAxisHelper = __webpack_require__(199);\n    var AxisView = __webpack_require__(198);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var modelHelper = __webpack_require__(33);\n    var findPointFromSeries = __webpack_require__(80);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            linkGroup && !showValueMap[tarKey] && each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                var srcValItem = showValueMap[srcKey];\n                // If srcValItem exist, source axis is triggered, so link to target axis.\n                if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                    var val = srcValItem.value;\n                    linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                        val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                    )));\n                    processOnAxis(tarAxisInfo, val, updaters, true, outputFinder);\n                }\n            });\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indexOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(8);\n    var graphic = __webpack_require__(5);\n    var Model = __webpack_require__(10);\n    var numberUtil = __webpack_require__(3);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(6);\n    var matrix = __webpack_require__(15);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(33);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(1).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(206);\n\n    __webpack_require__(83);\n    __webpack_require__(84);\n\n    __webpack_require__(202);\n    __webpack_require__(203);\n\n    __webpack_require__(205);\n    __webpack_require__(204);\n\n\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(3);\n    var helper = __webpack_require__(47);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(83);\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(84).extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var helper = __webpack_require__(47);\n    var echarts = __webpack_require__(1);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(1);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(23).registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = __webpack_require__(19);\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(9);\n    var graphic = __webpack_require__(5);\n    var interactionMutex = __webpack_require__(209);\n    var DataDiffer = __webpack_require__(48);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * true means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            rect, // mandatory.\n         *            defaultBrushType // optional, only used when brushType is 'auto'.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            var oldPanels = this._panels || {};\n            var newPanels = this._panels = panelOpts && panelOpts.length && {};\n            var thisGroup = this.group;\n\n            newPanels && each(panelOpts, function (panelOpt) {\n                var panelId = panelOpt.panelId;\n                var panel = oldPanels[panelId];\n                if (!panel) {\n                    panel = new graphic.Rect({\n                        silent: true,\n                        invisible: true\n                    });\n                    thisGroup.add(panel);\n                }\n\n                var rect = panelOpt.rect;\n                // Using BoundingRect to normalize negative width/height.\n                if (!(rect instanceof BoundingRect)) {\n                    rect = BoundingRect.create(rect);\n                }\n\n                panel.attr('shape', rect.plain());\n                panel.__brushPanelId = panelId;\n                panel.__defaultBrushType = panelOpt.defaultBrushType;\n                newPanels[panelId] = panel;\n                oldPanels[panelId] = null;\n            });\n\n            each(oldPanels, function (panel) {\n                panel && thisGroup.remove(panel);\n            });\n\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         * @return {boolean} [opt.position=[0, 0]]\n         * @return {boolean} [opt.rotation=0]\n         * @return {boolean} [opt.scale=[1, 1]]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        updateZ(cover);\n        cover.__brushOption = brushOption;\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(group) {\n        group.traverse(function (el) {\n            el.z = COVER_Z;\n            el.z2 = COVER_Z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    function getPanelByPoint(controller, x, y) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        each(panels, function (pn) {\n            pn.contain(x, y) && (panel = pn);\n        });\n        return panel;\n    }\n\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n        if (panel === true) { // Global panel\n            return zrUtil.clone(data);\n        }\n\n        var panelRect = panel.getBoundingRect();\n\n        return zrUtil.map(data, function (point) {\n            var x = point[0];\n            x = mathMax(x, panelRect.x);\n            x = mathMin(x, panelRect.x + panelRect.width);\n            var y = point[1];\n            y = mathMax(y, panelRect.y);\n            y = mathMin(y, panelRect.y + panelRect.height);\n            return [x, y];\n        });\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var zr = controller._zr;\n\n        if (controller._brushType) { // If active\n            var panels = controller._panels;\n            var covers = controller._covers;\n            var inCover;\n\n            for (var i = 0; i < covers.length; i++) {\n                if (coverRenderers[covers[i].__brushOption.brushType].contain(covers[i], x, y)) {\n                    inCover = true;\n                    break;\n                }\n            }\n\n            if (!inCover) {\n                if (panels) { // Brush on panels\n                    each(panels, function (panel) {\n                        panel.contain(x, y) && zr.setCursorStyle('crosshair');\n                    });\n                }\n                else { // Global brush\n                    zr.setCursorStyle('crosshair');\n                }\n            }\n        }\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, isEnd) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(controller.group.transformCoordToLocal(x, y));\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.__brushPanelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, x, y) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.__defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.__defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, x, y);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [this.group.transformCoordToLocal(x, y)];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            // set Cursor\n            resetCursor(this, e);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var eventParams = updateCoverByMouse(this, e, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var brushWidth = brushOption.brushStyle.width;\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                if (brushWidth == null) {\n                    var panel = getPanelByCover(controller, cover);\n                    var base = 0;\n                    if (panel !== true) {\n                        var rect = panel.getBoundingRect();\n                        brushWidth = xyIndex ? rect.width : rect.height;\n                        base = xyIndex ? rect.x : rect.y;\n                    }\n                    // FIXME\n                    // do not support global panel yet.\n                    otherExtent = [base, base + (brushWidth || 0)];\n                }\n                else {\n                    otherExtent = [-brushWidth / 2, brushWidth / 2];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var modelUtil = __webpack_require__(2);\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            return {\n                panelId: targetInfo.panelId,\n                rect: targetInfo.getPanelRect(),\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = {};\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            each(gridModelMap, function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(1).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(36);\n    var formatUtil = __webpack_require__(8);\n    var graphic = __webpack_require__(5);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(213);\n    __webpack_require__(214);\n\n    __webpack_require__(219);\n    __webpack_require__(217);\n    __webpack_require__(215);\n    __webpack_require__(216);\n    __webpack_require__(218);\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(16);\n    var zrUtil = __webpack_require__(0);\n\n    var ToolboxModel = __webpack_require__(1).extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {\n\n    var featureManager = __webpack_require__(16);\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(5);\n    var Model = __webpack_require__(10);\n    var DataDiffer = __webpack_require__(48);\n    var listComponentHelper = __webpack_require__(210);\n    var textContain = __webpack_require__(12);\n\n    module.exports = __webpack_require__(1).extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(55)))\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var eventTool = __webpack_require__(18);\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    __webpack_require__(16).register('dataView', DataView);\n\n    __webpack_require__(1).registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var BrushController = __webpack_require__(207);\n    var BrushTargetManager = __webpack_require__(208);\n    var history = __webpack_require__(85);\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    __webpack_require__(200);\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var dataZoomModel = findDataZoom(dimName, coordSys.getAxis(dimName).model, ecModel);\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    __webpack_require__(16).register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    __webpack_require__(1).registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = __webpack_require__(1);\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    __webpack_require__(16).register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var history = __webpack_require__(85);\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    __webpack_require__(16).register('restore', Restore);\n\n\n    __webpack_require__(1).registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(4);\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    __webpack_require__(16).register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(191);\n\n    __webpack_require__(222);\n\n    __webpack_require__(223);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(1).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(1).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var zrColor = __webpack_require__(22);\n    var eventUtil = __webpack_require__(18);\n    var formatUtil = __webpack_require__(8);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(4);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(221);\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(8);\n    var numberUtil = __webpack_require__(3);\n    var findPointFromSeries = __webpack_require__(80);\n    var layoutUtil = __webpack_require__(36);\n    var env = __webpack_require__(4);\n    var Model = __webpack_require__(10);\n    var globalListener = __webpack_require__(81);\n    var axisHelper = __webpack_require__(34);\n    var axisPointerViewHelper = __webpack_require__(82);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    __webpack_require__(1).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n            if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().handler.findHover(payload.x, payload.y),\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? 0 : 20, vAlign ? 0 : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (x + width + gapH > viewWidth) {\n            x -= width + gapH;\n        }\n        else {\n            x += gapH;\n        }\n        if (y + height + gapV > viewHeight) {\n            y -= height + gapV;\n        }\n        else {\n            y += gapV;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(3);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(0);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(34);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(185);\n    var symbolUtil = __webpack_require__(243);\n    var axisHelper = __webpack_require__(34);\n    var axisModelCommonMixin = __webpack_require__(225);\n    var Model = __webpack_require__(10);\n    var util = __webpack_require__(0);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: __webpack_require__(50),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var Model = __webpack_require__(10);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(23);\n\n    var globalDefault = __webpack_require__(231);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(86));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var ComponentModel = __webpack_require__(23);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(8);\n    var classUtil = __webpack_require__(11);\n    var modelUtil = __webpack_require__(2);\n    var ComponentModel = __webpack_require__(23);\n    var colorPaletteMixin = __webpack_require__(86);\n    var env = __webpack_require__(4);\n    var layout = __webpack_require__(36);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(51)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(51)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(51)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(12);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(0);\n    var compatStyle = __webpack_require__(238);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(35);\n    var numberUtil = __webpack_require__(3);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(52);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(35);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(3);\n    var formatUtil = __webpack_require__(8);\n    var scaleHelper = __webpack_require__(87);\n\n    var IntervalScale = __webpack_require__(52);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(5);\n    var BoundingRect = __webpack_require__(9);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(46);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(117), __esModule: true };\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(118), __esModule: true };\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _from = __webpack_require__(246);\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(93);\n\n\n/***/ }),\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(108)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.867c68959dc0b858c887.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/util.js\n// module id = 0\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this, this._coordSysMgr);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.2',\n        dependencies: {\n            zrender: '3.4.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/echarts.js\n// module id = 1\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/model.js\n// module id = 2\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/number.js\n// module id = 3\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/env.js\n// module id = 4\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/graphic.js\n// module id = 5\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/vector.js\n// module id = 6\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Path.js\n// module id = 7\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/format.js\n// module id = 8\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/BoundingRect.js\n// module id = 9\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/Model.js\n// module id = 10\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/clazz.js\n// module id = 11\n// module chunks = 0","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/text.js\n// module id = 12\n// module chunks = 0","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/component-normalizer.js\n// module id = 13\n// module chunks = 0","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_wks.js\n// module id = 14\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/matrix.js\n// module id = 15\n// module chunks = 0","'use strict';\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/featureManager.js\n// module id = 16\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/curve.js\n// module id = 17\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/event.js\n// module id = 18\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/mixin/Eventful.js\n// module id = 19\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 20\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_global.js\n// module id = 21\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/tool/color.js\n// module id = 22\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/Component.js\n// module id = 23\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_an-object.js\n// module id = 24\n// module chunks = 0","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_core.js\n// module id = 25\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_descriptors.js\n// module id = 26\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_has.js\n// module id = 27\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_hide.js\n// module id = 28\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_object-dp.js\n// module id = 29\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/config.js\n// module id = 30\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/container/Group.js\n// module id = 31\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/PathProxy.js\n// module id = 32\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/modelHelper.js\n// module id = 33\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/coord/axisHelper.js\n// module id = 34\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/scale/Scale.js\n// module id = 35\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/height is premitted to exist.\n                hasValue(newOption, names[2]) && (merged[names[1]] = null);\n                hasValue(newOption, names[1]) && (merged[names[2]] = null);\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/layout.js\n// module id = 36\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_defined.js\n// module id = 38\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_is-object.js\n// module id = 39\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_iterators.js\n// module id = 40\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_property-desc.js\n// module id = 41\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_shared-key.js\n// module id = 42\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_to-integer.js\n// module id = 43\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/timsort.js\n// module id = 44\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Displayable.js\n// module id = 45\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Gradient.js\n// module id = 46\n// module chunks = 0","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/helper.js\n// module id = 47\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/data/DataDiffer.js\n// module id = 48\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/data/List.js\n// module id = 49\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/data/helper/completeDimensions.js\n// module id = 50\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 51\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/scale/Interval.js\n// module id = 52\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/component.js\n// module id = 53\n// module chunks = 0","/*!\n * Vue.js v2.2.6\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // reset scheduler before updated hook called\n  var oldQueue = queue.slice();\n  resetSchedulerState();\n\n  // call updated hooks\n  index = oldQueue.length;\n  while (index--) {\n    watcher = oldQueue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    if (!vnode.componentInstance._isMounted) {\n      vnode.componentInstance._isMounted = true;\n      callHook(vnode.componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      activateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    if (!vnode.componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        vnode.componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(vnode.componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor, tag);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor, tag) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && attrs.hasOwnProperty(keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var inject = vm.$options.inject;\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    var loop = function ( i ) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          /* istanbul ignore else */\n          if (process.env.NODE_ENV !== 'production') {\n            defineReactive$$1(vm, key, source._provided[provideKey], function () {\n              warn(\n                \"Avoid mutating an injected value directly since the changes will be \" +\n                \"overwritten whenever the provided component re-renders. \" +\n                \"injection being mutated: \\\"\" + key + \"\\\"\",\n                vm\n              );\n            });\n          } else {\n            defineReactive$$1(vm, key, source._provided[provideKey]);\n          }\n          break\n        }\n        source = source.$parent;\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) loop( i );\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.2.6';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n        isTrue(oldVnode.isStatic) &&\n        vnode.key === oldVnode.key &&\n        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitLeaveDuration != null) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      config.productionTip !== false &&\n      inBrowser && typeof console !== 'undefined') {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n            (i > pos || !tagName) &&\n            options.warn) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  return \"[\" + key + \",function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}]\"\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n        el$1.for &&\n        el$1.tag !== 'template' &&\n        el$1.tag !== 'slot') {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var keywordMatch = exp.replace(stripStringRE, '').match(unaryOperatorsRE);\n  if (keywordMatch) {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.2.6@vue/dist/vue.esm.js\n// module id = 54\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.11.9@process/browser.js\n// module id = 55\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_cof.js\n// module id = 56\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_ctx.js\n// module id = 57\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_dom-create.js\n// module id = 58\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_enum-bug-keys.js\n// module id = 59\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_export.js\n// module id = 60\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_fails.js\n// module id = 61\n// module chunks = 0","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_set-to-string-tag.js\n// module id = 62\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_shared.js\n// module id = 63\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_to-iobject.js\n// module id = 64\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_to-length.js\n// module id = 65\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_to-object.js\n// module id = 66\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_uid.js\n// module id = 67\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/Element.js\n// module id = 68\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/animation/Animator.js\n// module id = 69\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/animation/requestAnimationFrame.js\n// module id = 70\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/util.js\n// module id = 71\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/LRU.js\n// module id = 72\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/guid.js\n// module id = 73\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/log.js\n// module id = 74\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Image.js\n// module id = 75\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Pattern.js\n// module id = 76\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Style.js\n// module id = 77\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/helper/poly.js\n// module id = 78\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/CoordinateSystem.js\n// module id = 79\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 80\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/globalListener.js\n// module id = 81\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/viewHelper.js\n// module id = 82\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 83\n// module chunks = 0","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 84\n// module chunks = 0","/**\n * @file History manager.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/history.js\n// module id = 85\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/colorPalette.js\n// module id = 86\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/scale/helper.js\n// module id = 87\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/throttle.js\n// module id = 88\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/view/Chart.js\n// module id = 89\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/view/Component.js\n// module id = 90\n// module chunks = 0","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.10.3@regenerator-runtime/runtime-module.js\n// module id = 93\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.10.3@regenerator-runtime/runtime.js\n// module id = 94\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.0.5@vue-style-loader/lib/listToStyles.js\n// module id = 108\n// module chunks = 0","/**\n  * vue-router v2.3.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (!condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (h, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // inject instance registration hooks\n    var hooks = data.hook || (data.hook = {});\n    hooks.init = function (vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.prepatch = function (oldVnode, vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.destroy = function (vnode) {\n      if (matched.instances[name] === vnode.child) {\n        matched.instances[name] = undefined;\n      }\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      warn(false, (\"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", expecting an object, function or boolean.\"));\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more comformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  if (query) {\n    var parsedQuery;\n    try {\n      parsedQuery = parseQuery(query);\n    } catch (e) {\n      process.env.NODE_ENV !== 'production' && warn(false, e.message);\n      parsedQuery = {};\n    }\n    for (var key in extraQuery) {\n      parsedQuery[key] = extraQuery[key];\n    }\n    return parsedQuery\n  } else {\n    return extraQuery\n  }\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom\n) {\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (ref) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  return (path || '/') + stringifyQuery(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n    var classes = {};\n    var activeClass = this.activeClass || router.options.linkActiveClass || 'router-link-active';\n    var compareTarget = location.path ? createRoute(null, location) : route;\n    classes[activeClass] = this.exact\n      ? isSameRoute(current, compareTarget)\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.target && e.target.getAttribute) {\n    var target = e.target.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (this.$options.router) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  if (relative.charAt(0) === '/') {\n    return relative\n  }\n\n  if (relative.charAt(0) === '?' || relative.charAt(0) === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '.') {\n      continue\n    } else if (segment === '..') {\n      stack.pop();\n    } else {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathMap,\n  oldNameMap\n) {\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathMap, nameMap, route);\n  });\n\n  return {\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var record = {\n    path: normalizePath(path, parent),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nvar isarray = index$1;\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCache = Object.create(null);\n\nfunction getRouteRegex (path) {\n  var hit = regexpCache[path];\n  var keys, regexp;\n\n  if (hit) {\n    keys = hit.keys;\n    regexp = hit.regexp;\n  } else {\n    keys = [];\n    regexp = index(path, keys);\n    regexpCache[path] = { keys: keys, regexp: regexp };\n  }\n\n  return { keys: keys, regexp: regexp }\n}\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : (current && current.path) || '/';\n  var query = resolveQuery(parsedPath.query, next.query);\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\nfunction createMatcher (routes) {\n  var ref = createRouteMap(routes);\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = getRouteRegex(record.path).keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var path in pathMap) {\n        if (matchRoute(path, location.params, location.path)) {\n          return _createRoute(pathMap[path], location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      process.env.NODE_ENV !== 'production' && warn(\n        false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n      );\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  path,\n  params,\n  pathname\n) {\n  var ref = getRouteRegex(path);\n  var regexp = ref.regexp;\n  var keys = ref.keys;\n  var m = pathname.match(regexp);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) { params[key.name] = val; }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n  }\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) {\n        cb(route);\n      });\n    }\n  }, onAbort);\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function () { onAbort && onAbort(); };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    hook(route, current, function (to) {\n      if (to === false) {\n        // next(false) -> abort navigation, ensure current URL\n        this$1.ensureURL(true);\n        abort();\n      } else if (typeof to === 'string' || typeof to === 'object') {\n        // next('/') or next({ path: '/' }) -> redirect\n        (typeof to === 'object' && to.replace) ? this$1.replace(to) : this$1.push(to);\n        abort();\n      } else {\n        // confirm transition and pass on the value\n        next(to);\n      }\n    });\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    runQueue(enterGuards, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { return cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  return function boundRouteGuard () {\n    return guard.apply(instance, arguments)\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return flatMapComponents(matched, function (def, _, match, key) {\n    // if it's a function and doesn't have Vue options attached,\n    // assume it's an async component resolve function.\n    // we are not using Vue's default async resolving mechanism because\n    // we want to halt the navigation until the incoming component has been\n    // resolved.\n    if (typeof def === 'function' && !def.options) {\n      return function (to, from, next) {\n        var resolve = once(function (resolvedDef) {\n          match.components[key] = resolvedDef;\n          next();\n        });\n\n        var reject = once(function (reason) {\n          warn(false, (\"Failed to resolve async component \" + key + \": \" + reason));\n          next(false);\n        });\n\n        var res = def(resolve, reject);\n        if (res && typeof res.then === 'function') {\n          res.then(resolve, reject);\n        }\n      }\n    }\n  })\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || []);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  this.beforeHooks.push(fn);\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  this.afterHooks.push(fn);\n};\n\nVueRouter.prototype.onReady = function onReady (cb) {\n  this.history.onReady(cb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(to, current || this.history.current, append);\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.3.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.3.1@vue-router/dist/vue-router.esm.js\n// module id = 116\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/fn/array/from.js\n// module id = 117\n// module chunks = 0","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/fn/json/stringify.js\n// module id = 118\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_a-function.js\n// module id = 119\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_array-includes.js\n// module id = 120\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_classof.js\n// module id = 121\n// module chunks = 0","'use strict';\nvar $defineProperty = require('./_object-dp')\n  , createDesc      = require('./_property-desc');\n\nmodule.exports = function(object, index, value){\n  if(index in object)$defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_create-property.js\n// module id = 122\n// module chunks = 0","module.exports = require('./_global').document && document.documentElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_html.js\n// module id = 123\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_ie8-dom-define.js\n// module id = 124\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_iobject.js\n// module id = 125\n// module chunks = 0","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_is-array-iter.js\n// module id = 126\n// module chunks = 0","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_iter-call.js\n// module id = 127\n// module chunks = 0","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_iter-create.js\n// module id = 128\n// module chunks = 0","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_iter-define.js\n// module id = 129\n// module chunks = 0","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_iter-detect.js\n// module id = 130\n// module chunks = 0","module.exports = true;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_library.js\n// module id = 131\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_object-create.js\n// module id = 132\n// module chunks = 0","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_object-dps.js\n// module id = 133\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_object-gpo.js\n// module id = 134\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_object-keys-internal.js\n// module id = 135\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_object-keys.js\n// module id = 136\n// module chunks = 0","module.exports = require('./_hide');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_redefine.js\n// module id = 137\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_string-at.js\n// module id = 138\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_to-index.js\n// module id = 139\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/_to-primitive.js\n// module id = 140\n// module chunks = 0","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/core.get-iterator-method.js\n// module id = 141\n// module chunks = 0","'use strict';\nvar ctx            = require('./_ctx')\n  , $export        = require('./_export')\n  , toObject       = require('./_to-object')\n  , call           = require('./_iter-call')\n  , isArrayIter    = require('./_is-array-iter')\n  , toLength       = require('./_to-length')\n  , createProperty = require('./_create-property')\n  , getIterFn      = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , aLen    = arguments.length\n      , mapfn   = aLen > 1 ? arguments[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/es6.array.from.js\n// module id = 142\n// module chunks = 0","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.4.1@core-js/library/modules/es6.string.iterator.js\n// module id = 143\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/Handler.js\n// module id = 144\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/Layer.js\n// module id = 145\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/Painter.js\n// module id = 146\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/Storage.js\n// module id = 147\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/animation/Animation.js\n// module id = 148\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/animation/Clip.js\n// module id = 149\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/animation/easing.js\n// module id = 150\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/arc.js\n// module id = 151\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/cubic.js\n// module id = 152\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/line.js\n// module id = 153\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/path.js\n// module id = 154\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/quadratic.js\n// module id = 155\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/contain/windingLine.js\n// module id = 156\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/GestureMgr.js\n// module id = 157\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/core/bbox.js\n// module id = 158\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/dom/HandlerProxy.js\n// module id = 159\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/CompoundPath.js\n// module id = 160\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/LinearGradient.js\n// module id = 161\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/RadialGradient.js\n// module id = 162\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/Text.js\n// module id = 163\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/helper/roundRect.js\n// module id = 164\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 165\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 166\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/mixin/RectText.js\n// module id = 167\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Arc.js\n// module id = 168\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 169\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Circle.js\n// module id = 170\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Line.js\n// module id = 171\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Polygon.js\n// module id = 172\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Polyline.js\n// module id = 173\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Rect.js\n// module id = 174\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Ring.js\n// module id = 175\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/graphic/shape/Sector.js\n// module id = 176\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/mixin/Animatable.js\n// module id = 177\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/mixin/Draggable.js\n// module id = 178\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/mixin/Transformable.js\n// module id = 179\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n    var matrix = require('../core/matrix');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/tool/path.js\n// module id = 180\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/tool/transformPath.js\n// module id = 181\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.4.2@zrender/lib/zrender.js\n// module id = 182\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n\n    function ExtensionAPI(chartInstance, coordSysMgr) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n\n        // Inject getCoordinateSystems to ecModel\n        this.getCoordinateSystems = zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/ExtensionAPI.js\n// module id = 183\n// module chunks = 0","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/action/createDataSelectAction.js\n// module id = 184\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/chart/helper/createListFromArray.js\n// module id = 185\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/chart/pie.js\n// module id = 186\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/chart/pie/PieSeries.js\n// module id = 187\n// module chunks = 0","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/chart/pie/PieView.js\n// module id = 188\n// module chunks = 0","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/chart/pie/labelLayout.js\n// module id = 189\n// module chunks = 0","// TODO minAngle\n\n\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/chart/pie/pieLayout.js\n// module id = 190\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer.js\n// module id = 191\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 192\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 193\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 194\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 195\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            linkGroup && !showValueMap[tarKey] && each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                var srcValItem = showValueMap[srcKey];\n                // If srcValItem exist, source axis is triggered, so link to target axis.\n                if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                    var val = srcValItem.value;\n                    linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                        val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                    )));\n                    processOnAxis(tarAxisInfo, val, updaters, true, outputFinder);\n                }\n            });\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indexOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 196\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axis/AxisBuilder.js\n// module id = 197\n// module chunks = 0","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axis/AxisView.js\n// module id = 198\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 199\n// module chunks = 0","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SelectZoomModel');\n    require('./dataZoom/SelectZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoomSelect.js\n// module id = 200\n// module chunks = 0","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 201\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 202\n// module chunks = 0","\n\n    module.exports = require('./DataZoomView').extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 203\n// module chunks = 0","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 204\n// module chunks = 0","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 205\n// module chunks = 0","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 206\n// module chunks = 0","/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var graphic = require('../../util/graphic');\n    var interactionMutex = require('./interactionMutex');\n    var DataDiffer = require('../../data/DataDiffer');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * true means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            rect, // mandatory.\n         *            defaultBrushType // optional, only used when brushType is 'auto'.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            var oldPanels = this._panels || {};\n            var newPanels = this._panels = panelOpts && panelOpts.length && {};\n            var thisGroup = this.group;\n\n            newPanels && each(panelOpts, function (panelOpt) {\n                var panelId = panelOpt.panelId;\n                var panel = oldPanels[panelId];\n                if (!panel) {\n                    panel = new graphic.Rect({\n                        silent: true,\n                        invisible: true\n                    });\n                    thisGroup.add(panel);\n                }\n\n                var rect = panelOpt.rect;\n                // Using BoundingRect to normalize negative width/height.\n                if (!(rect instanceof BoundingRect)) {\n                    rect = BoundingRect.create(rect);\n                }\n\n                panel.attr('shape', rect.plain());\n                panel.__brushPanelId = panelId;\n                panel.__defaultBrushType = panelOpt.defaultBrushType;\n                newPanels[panelId] = panel;\n                oldPanels[panelId] = null;\n            });\n\n            each(oldPanels, function (panel) {\n                panel && thisGroup.remove(panel);\n            });\n\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         * @return {boolean} [opt.position=[0, 0]]\n         * @return {boolean} [opt.rotation=0]\n         * @return {boolean} [opt.scale=[1, 1]]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        updateZ(cover);\n        cover.__brushOption = brushOption;\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(group) {\n        group.traverse(function (el) {\n            el.z = COVER_Z;\n            el.z2 = COVER_Z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    function getPanelByPoint(controller, x, y) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        each(panels, function (pn) {\n            pn.contain(x, y) && (panel = pn);\n        });\n        return panel;\n    }\n\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n        if (panel === true) { // Global panel\n            return zrUtil.clone(data);\n        }\n\n        var panelRect = panel.getBoundingRect();\n\n        return zrUtil.map(data, function (point) {\n            var x = point[0];\n            x = mathMax(x, panelRect.x);\n            x = mathMin(x, panelRect.x + panelRect.width);\n            var y = point[1];\n            y = mathMax(y, panelRect.y);\n            y = mathMin(y, panelRect.y + panelRect.height);\n            return [x, y];\n        });\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var zr = controller._zr;\n\n        if (controller._brushType) { // If active\n            var panels = controller._panels;\n            var covers = controller._covers;\n            var inCover;\n\n            for (var i = 0; i < covers.length; i++) {\n                if (coverRenderers[covers[i].__brushOption.brushType].contain(covers[i], x, y)) {\n                    inCover = true;\n                    break;\n                }\n            }\n\n            if (!inCover) {\n                if (panels) { // Brush on panels\n                    each(panels, function (panel) {\n                        panel.contain(x, y) && zr.setCursorStyle('crosshair');\n                    });\n                }\n                else { // Global brush\n                    zr.setCursorStyle('crosshair');\n                }\n            }\n        }\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, isEnd) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(controller.group.transformCoordToLocal(x, y));\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.__brushPanelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, x, y) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.__defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.__defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, x, y);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [this.group.transformCoordToLocal(x, y)];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            // set Cursor\n            resetCursor(this, e);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var eventParams = updateCoverByMouse(this, e, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var brushWidth = brushOption.brushStyle.width;\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                if (brushWidth == null) {\n                    var panel = getPanelByCover(controller, cover);\n                    var base = 0;\n                    if (panel !== true) {\n                        var rect = panel.getBoundingRect();\n                        brushWidth = xyIndex ? rect.width : rect.height;\n                        base = xyIndex ? rect.x : rect.y;\n                    }\n                    // FIXME\n                    // do not support global panel yet.\n                    otherExtent = [base, base + (brushWidth || 0)];\n                }\n                else {\n                    otherExtent = [-brushWidth / 2, brushWidth / 2];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/helper/BrushController.js\n// module id = 207\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            return {\n                panelId: targetInfo.panelId,\n                rect: targetInfo.getPanelRect(),\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = {};\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            each(gridModelMap, function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/helper/BrushTargetManager.js\n// module id = 208\n// module chunks = 0","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/helper/interactionMutex.js\n// module id = 209\n// module chunks = 0","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/helper/listComponent.js\n// module id = 210\n// module chunks = 0","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/helper/selectableMixin.js\n// module id = 211\n// module chunks = 0","\n\n    require('./toolbox/ToolboxModel');\n    require('./toolbox/ToolboxView');\n\n    require('./toolbox/feature/SaveAsImage');\n    require('./toolbox/feature/MagicType');\n    require('./toolbox/feature/DataView');\n    require('./toolbox/feature/DataZoom');\n    require('./toolbox/feature/Restore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox.js\n// module id = 212\n// module chunks = 0","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var ToolboxModel = require('../../echarts').extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 213\n// module chunks = 0","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var DataDiffer = require('../../data/DataDiffer');\n    var listComponentHelper = require('../helper/listComponent');\n    var textContain = require('zrender/lib/contain/text');\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/ToolboxView.js\n// module id = 214\n// module chunks = 0","/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    require('../featureManager').register('dataView', DataView);\n\n    require('../../../echarts').registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/feature/DataView.js\n// module id = 215\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BrushController = require('../../helper/BrushController');\n    var BrushTargetManager = require('../../helper/BrushTargetManager');\n    var history = require('../../dataZoom/history');\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    require('../../dataZoomSelect');\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var dataZoomModel = findDataZoom(dimName, coordSys.getAxis(dimName).model, ecModel);\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    require('../featureManager').register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    require('../../../echarts').registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 216\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = require('../../../echarts');\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    require('../featureManager').register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 217\n// module chunks = 0","'use strict';\n\n\n    var history = require('../../dataZoom/history');\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    require('../featureManager').register('restore', Restore);\n\n\n    require('../../../echarts').registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/feature/Restore.js\n// module id = 218\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    require('../featureManager').register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 219\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/tooltip.js\n// module id = 220\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 221\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 222\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n            if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().handler.findHover(payload.x, payload.y),\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? 0 : 20, vAlign ? 0 : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (x + width + gapH > viewWidth) {\n            x -= width + gapH;\n        }\n        else {\n            x += gapH;\n        }\n        if (y + height + gapV > viewHeight) {\n            y -= height + gapV;\n        }\n        else {\n            y += gapV;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/component/tooltip/TooltipView.js\n// module id = 223\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/coord/Axis.js\n// module id = 224\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 225\n// module chunks = 0","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/helper.js\n// module id = 226\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/loading/default.js\n// module id = 227\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/Global.js\n// module id = 228\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/OptionManager.js\n// module id = 229\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/Series.js\n// module id = 230\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/globalDefault.js\n// module id = 231\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/areaStyle.js\n// module id = 232\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/boxLayout.js\n// module id = 233\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/itemStyle.js\n// module id = 234\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/lineStyle.js\n// module id = 235\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/model/mixin/textStyle.js\n// module id = 236\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/preprocessor/backwardCompat.js\n// module id = 237\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 238\n// module chunks = 0","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/processor/dataFilter.js\n// module id = 239\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/scale/Log.js\n// module id = 240\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/scale/Ordinal.js\n// module id = 241\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/scale/Time.js\n// module id = 242\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/util/symbol.js\n// module id = 243\n// module chunks = 0","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/visual/dataColor.js\n// module id = 244\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.3.5.2@echarts/lib/visual/seriesColor.js\n// module id = 245\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.23.0@babel-runtime/core-js/array/from.js\n// module id = 246\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.23.0@babel-runtime/core-js/json/stringify.js\n// module id = 247\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.23.0@babel-runtime/helpers/toConsumableArray.js\n// module id = 248\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.6.23.0@babel-runtime/regenerator/index.js\n// module id = 249\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.26.4@css-loader/lib/css-base.js\n// module id = 258\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.0.5@vue-style-loader/lib/addStylesClient.js\n// module id = 259\n// module chunks = 0"],"sourceRoot":""}